$date
	Sat Dec 09 19:46:17 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module check_extrema_tb $end
$var wire 9 ! second_data [8:0] $end
$var wire 4 " second_address [3:0] $end
$var wire 1 # reader_done $end
$var wire 9 $ first_data [8:0] $end
$var wire 4 % first_address [3:0] $end
$var wire 1 & busy $end
$var parameter 32 ' BIT_DEPTH $end
$var parameter 32 ( DIMENSION $end
$var reg 1 ) clk_in $end
$var reg 1 * read $end
$var reg 1 + rst_in $end
$var reg 2 , x [1:0] $end
$var reg 2 - y [1:0] $end
$scope module first_bram $end
$var wire 1 ) clka $end
$var wire 9 . dina [8:0] $end
$var wire 1 / ena $end
$var wire 1 0 regcea $end
$var wire 1 + rsta $end
$var wire 1 1 wea $end
$var wire 9 2 douta [8:0] $end
$var wire 4 3 addra [3:0] $end
$var parameter 152 4 INIT_FILE $end
$var parameter 32 5 RAM_DEPTH $end
$var parameter 128 6 RAM_PERFORMANCE $end
$var parameter 32 7 RAM_WIDTH $end
$var reg 9 8 ram_data [8:0] $end
$scope function clogb2 $end
$var integer 32 9 depth [31:0] $end
$upscope $end
$scope begin output_register $end
$var reg 9 : douta_reg [8:0] $end
$upscope $end
$scope begin use_init_file $end
$upscope $end
$upscope $end
$scope module reader $end
$var wire 1 ) clk $end
$var wire 9 ; first_data [8:0] $end
$var wire 1 * input_ready $end
$var wire 1 + rst_in $end
$var wire 2 < x [1:0] $end
$var wire 2 = y [1:0] $end
$var wire 9 > second_data [8:0] $end
$var wire 4 ? address [3:0] $end
$var parameter 32 @ BIT_DEPTH $end
$var parameter 32 A DIMENSION $end
$var reg 1 & busy $end
$var reg 2 B counter [1:0] $end
$var reg 1 # done $end
$var reg 4 C first_address [3:0] $end
$var reg 4 D second_address [3:0] $end
$var integer 32 E state [31:0] $end
$upscope $end
$scope module second_bram $end
$var wire 4 F addra [3:0] $end
$var wire 1 ) clka $end
$var wire 9 G dina [8:0] $end
$var wire 1 H ena $end
$var wire 1 I regcea $end
$var wire 1 + rsta $end
$var wire 1 J wea $end
$var wire 9 K douta [8:0] $end
$var parameter 160 L INIT_FILE $end
$var parameter 32 M RAM_DEPTH $end
$var parameter 128 N RAM_PERFORMANCE $end
$var parameter 32 O RAM_WIDTH $end
$var reg 9 P ram_data [8:0] $end
$scope function clogb2 $end
$var integer 32 Q depth [31:0] $end
$upscope $end
$scope begin output_register $end
$var reg 9 R douta_reg [8:0] $end
$upscope $end
$scope begin use_init_file $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 S i [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 T j [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1001 O
b1001000010010010100011101001000010111110101000001000101010100100100011001001111010100100100110101000001010011100100001101000101 N
b10000 M
b111001101100101011000110110111101101110011001000101111101110100011001010111001101110100010111110110001001110010011000010110110100101110011011010110010101101101 L
b100 A
b1001 @
b1001 7
b1001000010010010100011101001000010111110101000001000101010100100100011001001111010100100100110101000001010011100100001101000101 6
b10000 5
b1100110011010010111001001110011011101000101111101110100011001010111001101110100010111110110001001110010011000010110110100101110011011010110010101101101 4
b100 (
b1001 '
$end
#0
$dumpvars
b0 T
b0 S
b0 R
bx Q
b0 P
b0 K
0J
1I
1H
b0 G
bx F
b0 E
bx D
bx C
bx B
bx ?
b0 >
bx =
bx <
b0 ;
b0 :
bx 9
b0 8
bx 3
b0 2
01
10
1/
b0 .
bx -
bx ,
0+
x*
0)
x&
bx %
b0 $
x#
bx "
b0 !
$end
#5000
0#
bx 8
bx P
1)
#10000
0)
1+
#15000
b0 B
1)
#20000
b0 ?
0)
b0 -
b0 =
b0 ,
b0 <
0+
#25000
bx $
bx 2
bx ;
bx :
bx !
bx >
bx K
bx R
1)
#30000
0)
1*
#35000
1&
b0 "
b0 D
b0 F
b0 %
b0 3
b0 C
b1 E
1)
#40000
0)
0*
#45000
b1 B
b0 8
b0 P
1)
#50000
0)
#55000
b0 !
b0 >
b0 K
b0 R
b0 $
b0 2
b0 ;
b0 :
b10 B
1)
#60000
0)
#65000
0&
1#
b0 E
1)
#70000
b1 ?
0)
b1 ,
b1 <
b1 T
#75000
0#
1)
#80000
0)
1*
#85000
1&
b0 B
b1 "
b1 D
b1 F
b1 %
b1 3
b1 C
b1 E
1)
#90000
0)
0*
#95000
b1 B
1)
#100000
0)
#105000
b10 B
1)
#110000
0)
#115000
0&
1#
b0 E
1)
#120000
b10 ?
0)
b10 ,
b10 <
b10 T
#125000
0#
1)
#130000
0)
1*
#135000
1&
b0 B
b10 "
b10 D
b10 F
b10 %
b10 3
b10 C
b1 E
1)
#140000
0)
0*
#145000
b1 B
b111111111 8
b111111111 P
1)
#150000
0)
#155000
b111111111 !
b111111111 >
b111111111 K
b111111111 R
b111111111 $
b111111111 2
b111111111 ;
b111111111 :
b10 B
1)
#160000
0)
#165000
0&
1#
b0 E
1)
#170000
b11 ?
0)
b11 ,
b11 <
b11 T
#175000
0#
1)
#180000
0)
1*
#185000
1&
b0 B
b11 "
b11 D
b11 F
b11 %
b11 3
b11 C
b1 E
1)
#190000
0)
0*
#195000
b0 P
b0 8
b1 B
1)
#200000
0)
#205000
b10 B
b0 $
b0 2
b0 ;
b0 :
b0 !
b0 >
b0 K
b0 R
1)
#210000
0)
#215000
0&
1#
b0 E
1)
#220000
b100 ?
0)
b1 -
b1 =
b0 ,
b0 <
b1 S
b0 T
#225000
0#
1)
#230000
0)
1*
#235000
1&
b0 B
b100 "
b100 D
b100 F
b100 %
b100 3
b100 C
b1 E
1)
#240000
0)
0*
#245000
b1 B
1)
#250000
0)
#255000
b10 B
1)
#260000
0)
#265000
0&
1#
b0 E
1)
#270000
b101 ?
0)
b1 ,
b1 <
b1 T
#275000
0#
1)
#280000
0)
1*
#285000
1&
b0 B
b101 "
b101 D
b101 F
b101 %
b101 3
b101 C
b1 E
1)
#290000
0)
0*
#295000
b111111110 P
b111111110 8
b1 B
1)
#300000
0)
#305000
b10 B
b111111110 $
b111111110 2
b111111110 ;
b111111110 :
b111111110 !
b111111110 >
b111111110 K
b111111110 R
1)
#310000
0)
#315000
0&
1#
b0 E
1)
#320000
b110 ?
0)
b10 ,
b10 <
b10 T
#325000
0#
1)
#330000
0)
1*
#335000
1&
b0 B
b110 "
b110 D
b110 F
b110 %
b110 3
b110 C
b1 E
1)
#340000
0)
0*
#345000
b1 B
b1 8
b111110101 P
1)
#350000
0)
#355000
b111110101 !
b111110101 >
b111110101 K
b111110101 R
b1 $
b1 2
b1 ;
b1 :
b10 B
1)
#360000
0)
#365000
0&
1#
b0 E
1)
#370000
b111 ?
0)
b11 ,
b11 <
b11 T
#375000
0#
1)
#380000
0)
1*
#385000
1&
b0 B
b111 "
b111 D
b111 F
b111 %
b111 3
b111 C
b1 E
1)
#390000
0)
0*
#395000
b0 P
b0 8
b1 B
1)
#400000
0)
#405000
b10 B
b0 $
b0 2
b0 ;
b0 :
b0 !
b0 >
b0 K
b0 R
1)
#410000
0)
#415000
0&
1#
b0 E
1)
#420000
b1000 ?
0)
b10 -
b10 =
b0 ,
b0 <
b10 S
b0 T
#425000
0#
1)
#430000
0)
1*
#435000
1&
b0 B
b1000 "
b1000 D
b1000 F
b1000 %
b1000 3
b1000 C
b1 E
1)
#440000
0)
0*
#445000
b1 B
1)
#450000
0)
#455000
b10 B
1)
#460000
0)
#465000
0&
1#
b0 E
1)
#470000
b1001 ?
0)
b1 ,
b1 <
b1 T
#475000
0#
1)
#480000
0)
1*
#485000
1&
b0 B
b1001 "
b1001 D
b1001 F
b1001 %
b1001 3
b1001 C
b1 E
1)
#490000
0)
0*
#495000
b111111101 P
b111111101 8
b1 B
1)
#500000
0)
#505000
b10 B
b111111101 $
b111111101 2
b111111101 ;
b111111101 :
b111111101 !
b111111101 >
b111111101 K
b111111101 R
1)
#510000
0)
#515000
0&
1#
b0 E
1)
#520000
b1010 ?
0)
b10 ,
b10 <
b10 T
#525000
0#
1)
#530000
0)
1*
#535000
1&
b0 B
b1010 "
b1010 D
b1010 F
b1010 %
b1010 3
b1010 C
b1 E
1)
#540000
0)
0*
#545000
b1 B
b0 8
b0 P
1)
#550000
0)
#555000
b0 !
b0 >
b0 K
b0 R
b0 $
b0 2
b0 ;
b0 :
b10 B
1)
#560000
0)
#565000
0&
1#
b0 E
1)
#570000
b1011 ?
0)
b11 ,
b11 <
b11 T
#575000
0#
1)
#580000
0)
1*
#585000
1&
b0 B
b1011 "
b1011 D
b1011 F
b1011 %
b1011 3
b1011 C
b1 E
1)
#590000
0)
0*
#595000
b1 B
1)
#600000
0)
#605000
b10 B
1)
#610000
0)
#615000
0&
1#
b0 E
1)
#620000
b1100 ?
0)
b11 -
b11 =
b0 ,
b0 <
b11 S
b0 T
#625000
0#
1)
#630000
0)
1*
#635000
1&
b0 B
b1100 "
b1100 D
b1100 F
b1100 %
b1100 3
b1100 C
b1 E
1)
#640000
0)
0*
#645000
b1 B
1)
#650000
0)
#655000
b10 B
1)
#660000
0)
#665000
0&
1#
b0 E
1)
#670000
b1101 ?
0)
b1 ,
b1 <
b1 T
#675000
0#
1)
#680000
0)
1*
#685000
1&
b0 B
b1101 "
b1101 D
b1101 F
b1101 %
b1101 3
b1101 C
b1 E
1)
#690000
0)
0*
#695000
b1 B
1)
#700000
0)
#705000
b10 B
1)
#710000
0)
#715000
0&
1#
b0 E
1)
#720000
b1110 ?
0)
b10 ,
b10 <
b10 T
#725000
0#
1)
#730000
0)
1*
#735000
1&
b0 B
b1110 "
b1110 D
b1110 F
b1110 %
b1110 3
b1110 C
b1 E
1)
#740000
0)
0*
#745000
b1 B
1)
#750000
0)
#755000
b10 B
1)
#760000
0)
#765000
0&
1#
b0 E
1)
#770000
b1111 ?
0)
b11 ,
b11 <
b11 T
#775000
0#
1)
#780000
0)
1*
#785000
1&
b0 B
b1111 "
b1111 D
b1111 F
b1111 %
b1111 3
b1111 C
b1 E
1)
#790000
0)
0*
#795000
b111111100 P
b111111100 8
b1 B
1)
#800000
0)
#805000
b10 B
b111111100 $
b111111100 2
b111111100 ;
b111111100 :
b111111100 !
b111111100 >
b111111100 K
b111111100 R
1)
#810000
0)
#815000
0&
1#
b0 E
1)
#820000
0)
b100 S
b100 T
